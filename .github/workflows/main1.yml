
name: Continuous Integration and Deployment Pipeline

on:
  push:
    branches:
      - master
  workflow_call:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Run code linting
        run: |
          # Add your linting commands here

  format:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install formatting tools
        run: |
          # Add commands to install formatting tools if needed
      - name: Run code formatting
        run: |
          # Add your formatting commands here

  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: username
          POSTGRES_PASSWORD: password
          POSTGRES_DB: database_name
        ports:
          - 5432:5432
      redis:
        image: redis:latest
        ports:
          - 6379:6379
      mailhog:
        image: mailhog/mailhog:latest
        ports:
          - 1025:1025
          - 8025:8025
      mockserver:
        image: mockserver/mockserver:latest
        env:
          MOCKSERVER_LOG_LEVEL: DEBUG
          SERVER_PORT: 8026
        ports:
          - 8026:8026
    env:
      APP_PROFILE: test
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Cache dependencies
      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Migrate database
        run: |
          ./scripts/init_db.sh

      - name: Add mockserver expectations
        run: |
          ./scripts/init_mockserver.sh

      - name: Run cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test

  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Build project
        run: |
          # Add commands to build your project

  deploy:
    needs: [lint, format, test, build]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      # Cache dependencies
      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-
      - name: Build and deploy Docker image
        uses: ./.github/workflows/image-builder.yml


  test-coverage:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      # Cache dependencies
      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-
      - name: Install nightly toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
      - name: Install tarpaulin
        if: ${{ steps.cache-tarpaulin.outputs.cache-hit != 'true' }}
        continue-on-error: true
        uses: actions-rs/cargo@v1
        with:
          command: install
          args: >
            cargo-tarpaulin
      - name: Migrate database
        run: |
          ./scripts/init_db.sh
      - name: Add mockserver expectations
        run: |
          ./scripts/init_mockserver.sh
      - name: Generate code coverage
        run: |
          cargo +nightly tarpaulin --verbose --all-features --workspace --timeout 120 --out Xml
      - name: Upload to codecov.io
        uses: codecov/codecov-action@v3
        with:
          fail_ci_if_error: true

  security-checker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      # Cache dependencies
      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-
      - name: Install dependencies
        run: |
          # Add commands to install dependencies if needed
      - name: Run security audit
        uses: actions-rs/audit-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

  spell-checker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      # Cache dependencies
      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-
      - name: Run spell checker
        uses: crate-ci/typos@master